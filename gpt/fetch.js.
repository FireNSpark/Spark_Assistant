// 2 - Voice and Buttons (Updated for GPT Integration)

import { fetchOpenAIResponse } from "./gpt/fetch.js";

const synth = window.speechSynthesis;
const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

function speak(text) {
  const utter = new SpeechSynthesisUtterance(text);
  utter.lang = 'en-US';
  utter.pitch = 1;
  utter.rate = 1;
  utter.volume = 1;
  utter.voice = synth.getVoices().find(v => v.name.includes('Google') || v.default);
  synth.cancel();
  synth.speak(utter);
}

async function handleTextInput(text) {
  if (!text) return;
  const reply = await fetchOpenAIResponse(text);
  speak(reply);
  appendToChat('user', text);
  appendToChat('bot', reply);
}

function startMicListening() {
  if (!SpeechRecognition) {
    speak("Mic not supported in this browser.");
    return;
  }

  const recognition = new SpeechRecognition();
  recognition.lang = 'en-US';
  recognition.interimResults = false;
  recognition.maxAlternatives = 1;

  recognition.onresult = async (event) => {
    const spoken = event.results[0][0].transcript;
    await handleTextInput(spoken);
  };

  recognition.onerror = (event) => {
    speak(`Mic error: ${event.error}`);
  };

  recognition.start();
}

function appendToChat(sender, message) {
  const chatBox = document.getElementById('chatBox');
  if (!chatBox) return;
  const messageElem = document.createElement('div');
  messageElem.className = sender === 'user' ? 'user-message' : 'bot-message';
  messageElem.textContent = message;
  chatBox.appendChild(messageElem);
  chatBox.scrollTop = chatBox.scrollHeight;
}

window.addEventListener('DOMContentLoaded', () => {
  const sendBtn = document.getElementById('sendBtn');
  const speakBtn = document.getElementById('speakBtn');
  const userInput = document.getElementById('userInput');

  if (sendBtn && userInput) {
    sendBtn.addEventListener('click', async () => {
      const text = userInput.value.trim();
      if (text) {
        await handleTextInput(text);
        userInput.value = '';
      }
    });
  }

  if (speakBtn) {
    speakBtn.addEventListener('click', () => {
      startMicListening();
    });
  }
});
